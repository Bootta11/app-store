services:
  "{{STACK_NAME}}":
    image: portainer/portainer-ce:latest
    expose:
      - "9000/http/Portainer Dashboard"
    volumes:
      - "{{PORTAINER_STORAGE}}:/data"
    preferred_server_hostnames:
      - "{{PORTAINER_DEPLOYMENT_SERVER}}"
    docker_proxy_config:
      enabled: true
      permissions:
        ping: read_write
        version: read_write
        info: read_write
        events: read_write
        auth: read_write
        secrets: read_write
        build: read_write
        commit: read_write
        configs: read_write
        containers: read_write
        distribution: read_write
        exec: read_write
        grpc: read_write
        images: read_write
        networks: read_write
        nodes: read_write
        plugins: read_write
        services: read_write
        session: read_write
        swarm: read_write
        system: read_write
        tasks: read_write
        volumes: read_write
docs:
  logo_url: "https://raw.githubusercontent.com/swiftwave-org/app-store/main/assets/logos/portainer.png"
  name: "Portainer"
  description: "Making Docker and Kubernetes management easy"
  readme_description: >
    **Portainer Community Edition** is a lightweight service delivery platform for containerized applications that can be used to manage Docker, Swarm, Kubernetes and ACI environments. It is designed to be as simple to deploy as it is to use. The application allows you to manage all your orchestrator resources (containers, images, volumes, networks and more) through a ‘smart’ GUI and/or an extensive API.

    ### Setup Guide

    - **Step 1:** Install the app first from **Start Installation** button

    - **Step 2:** Open the app in swiftwave and go to **Deploy Config > Docker Proxy Configuration** and copy the docker proxy hostname

    - **Step 3:** Go to Portainer dashboard and create an environment

    - **Step 4:** In the environment, select **Docker Standalone** as the environment type

    - **Step 5:** Choose **API** as the endpoint type

    - **Step 6:** Provide a environment name and in docker api url put **{{docker proxy hostname}}:2375**

    - **Step 5:** Put **{{docker proxy hostname}}:2375** in the environment URL

    - **Step 6:** Click on **Connect**
    
    - **Step 7:** Click on **Close** and you are ready to go

    ### Links

    - Official Wesbite - [portainer.io](https://www.portainer.io/)

    - Github - [github.com/portainer/portainer](https://github.com/portainer/portainer)

  iframe_video_embed: ""
  variables:
    PORTAINER_DEPLOYMENT_SERVER:
      title: "Deploy on Server"
      description: "Choose swarm manager server (recommended)"
      default: ""
      type: server
      options:
    PORTAINER_STORAGE:
      title: "Portainer Storage"
      description: "The storage location for portainer"
      default: ""
      type: volume
      options:
